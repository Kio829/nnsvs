{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ee1eef4e",
   "metadata": {},
   "source": [
    "# NNSVS vs. Sinsy\n",
    "\n",
    "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/r9y9/nnsvs/blob/master/notebooks/nnsvs_vs_sinsy.ipynb)\n",
    "\n",
    "\n",
    "This notebooks show audio samples for comparisions of NNSVS and [Sinsy](https://www.sinsy.jp/).\n",
    "\n",
    "## Models\n",
    "\n",
    "- **sinsy_f00001j**:  Sinsy's HMM-based SVS system\n",
    "- **sinsy_f00001j_dnn_beta4**:  Sinsy's DNN-based SVS system.\n",
    "- **nnsvs_yoko**: NNSVS-based system trained on the publicly available version of nit-song070 database. Specifically, we used 29 songs (out of 31) for training. Note that pre-trained models based on kiritan_singing database (49 songs for trainnig) were used to initialize model parameters. Therefore, the system in fact used 49 + 29 songs in total for training.\n",
    "\n",
    "## Notes\n",
    "\n",
    "- **Trainig data**: Accorindg to the [latest sinsy's paper](https://arxiv.org/abs/2108.02776), the authors seems to use 60 songs (out of 70) for training. Since the publically available version of the nit-song070 dataset only contains a subset of the full dataset, we are unable to train NNSVS models with the same training data condition.\n",
    "- **Date**: Sinsy samples were generated at 2022/03/27 using https://www.sinsy.jp/. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ffdb4e4",
   "metadata": {},
   "source": [
    "## Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2978569c",
   "metadata": {},
   "outputs": [],
   "source": [
    "%%capture\n",
    "try:\n",
    "    import nnsvs\n",
    "except ImportError:\n",
    "    ! pip install git+https://github.com/r9y9/nnsvs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2f69e83e",
   "metadata": {},
   "outputs": [],
   "source": [
    "%pylab inline\n",
    "%load_ext autoreload\n",
    "%autoreload\n",
    "import IPython\n",
    "from IPython.display import Audio\n",
    "from scipy.io import wavfile\n",
    "import pysinsy\n",
    "from nnmnkwii.io import hts\n",
    "from urllib.request import urlretrieve\n",
    "import tempfile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "70ea3c3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from nnsvs.pretrained import create_svs_engine\n",
    "import nnsvs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb4ee3e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def svs_display(model, xml_file):\n",
    "    engine = create_svs_engine(model)\n",
    "    contexts = pysinsy.extract_fullcontext(xml_file)\n",
    "    labels = hts.HTSLabelFile.create_from_contexts(contexts)\n",
    "    wav, sr = engine.svs(labels)\n",
    "    IPython.display.display(Audio(wav, rate=sr))\n",
    "    \n",
    "def wav_display(url):\n",
    "    with tempfile.NamedTemporaryFile(suffix=\".wav\") as f:\n",
    "        urlretrieve(url, f.name) \n",
    "        sr, wav = wavfile.read(f.name)\n",
    "    IPython.display.display(Audio(wav, rate=sr))    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54c4c4a8",
   "metadata": {},
   "source": [
    "## Sample 1: げんこつ山のタヌキさん"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b12ad97",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "print(\"sinsy_f00001j\")\n",
    "wav_display(\"https://www.dropbox.com/s/qq6w7bbcc5ikcdf/sinsy_song070_f00001j_063.wav?dl=1\")\n",
    "print(\"nnsvs_yoko\")\n",
    "svs_display(\"r9y9/yoko_latest\", nnsvs.util.example_xml_file(\"song070_f00001_063\"))\n",
    "print(\"sinsy_f00001j_dnn_beta4\")\n",
    "wav_display(\"https://www.dropbox.com/s/4epe08wqebyuh4g/sinsy_song070_f00001j_dnn_beta4_063.wav?dl=1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1170dfff",
   "metadata": {},
   "source": [
    "## Sample 2: Get Over"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6c30762",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"sinsy_f00001j\")\n",
    "wav_display(\"https://www.dropbox.com/s/kam9kju97umi6li/sinsy_f00001j_get_over.wav?dl=1\")\n",
    "print(\"nnsvs_yoko\")\n",
    "svs_display(\"r9y9/yoko_latest\", nnsvs.util.example_xml_file(\"get_over\"))\n",
    "print(\"sinsy_f00001j_dnn_beta4\")\n",
    "wav_display(\"https://www.dropbox.com/s/7st0acvguvbdoaj/sinsy_f00001j_dnn_beta4_get_over.wav?dl=1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2618700f",
   "metadata": {},
   "source": [
    "## Sample 3: 雪"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "544a8c80",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "print(\"sinsy_f00001j\")\n",
    "wav_display(\"https://www.dropbox.com/s/ho5xgkil8r3f3ed/sinsy_yuki_f00001j.wav?dl=1\")\n",
    "print(\"nnsvs_yoko\")\n",
    "svs_display(\"r9y9/yoko_latest\", nnsvs.util.example_xml_file(\"yuki\"))\n",
    "print(\"sinsy_f00001j_dnn_beta4\")\n",
    "wav_display(\"https://www.dropbox.com/s/jo2ool0nytzxln2/sinsy_yuki_f00001j_dnn_beta4.wav?dl=1\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
